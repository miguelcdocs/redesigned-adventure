type User {
  id: ObjID!
  email: String!
  bio: String
  firstName: String
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  users(lastCreatedAt: Float, limit: Int): [User!]
  user(id: ObjID!): User
  userByEmail(email: String!): User
}

input CreateUserInput {
  email: String!
  bio: String
  firstName: String
}

input UpdateUserInput {
  email: String!
  bio: String
  firstName: String
}

extend type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(id: ObjID!, input: UpdateUserInput!): User
  removeUser(id: ObjID!): Boolean
}

extend type Subscription {
  userCreated: User
  userUpdated: User
  userRemoved: ObjID
}
